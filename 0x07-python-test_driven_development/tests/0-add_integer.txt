===============================
 How to Use doctest_in_help.py
===============================

This library is very simple, since it only has one function called
``add_integer(a,b=98)``.

Numbers
=======

``add_integer()`` returns the product of its arguments.  For numbers,
that value is equivalent to using the ``*`` operator.

::

    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(2, 3)
    5

It also works with floating-point values.

::

    >>> add_integer(2.0, 3)
    5

    >>> add_integer(0, 3)
    3

    >>> add_integer(-1, 3)
    2
    >>> add_integer(None, None)
    Traceback (most recent call last):
    TypeError: a must be an integer


Non-Numbers
===========

Because ``*`` is also defined on data types other than numbers,
``add_integer()`` works just as well if one of the arguments is a
string, a list, or a tuple.

::

    >>> add_integer('a', 3)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(['A', 'B', 'C'], 2)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(3,'a')
    Traceback (most recent call last):
    TypeError: b must be an integer
